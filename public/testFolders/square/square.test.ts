import { square } from './square';

//Запуск нескольких сценариев тестирования
describe('square', () => {
    let mockValue: number = 0;

    // Различные вычесления перед условиями проверки, например создание моков, будет отрабатывать для -- КАЖДОГО -- условия
    beforeEach(() => {
        mockValue = Math.random();
    })
    // Различные вычесления перед условиями проверки, будет отрабатывать -- 1 РАЗ -- для всех условий
    beforeAll(() => {

    })
    test('Валидные значения', () => {
        expect(square(2)).toEqual(4);
        expect(square(2)).toBeLessThan(5); // Число которое получили меньше ожидаемого результат
        expect(square(2)).toBeGreaterThan(3); // Число которое получили больше ожидаемого результат
        expect(square(2)).not.toBe(6); // Число которое получили не равно ожидаемому результату
        expect(square(2)).not.toBeUndefined(); //Число которое получили не равно Undefined
    })
    // Различные вычесления после условий проверки, будет отрабатывать для -- КАЖДОГО -- условия
    afterEach(() => {
        jest.clearAllMocks(); // Очистка всех моков
    })
    // Различные вычесления после условий проверки, будет отрабатывать -- 1 РАЗ -- для всех условий
    afterAll(() => {

    })
})